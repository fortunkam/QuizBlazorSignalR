@using QuizExperiment.Models

<div class="quiz-edit-question-list-container d-flex flex-column align-items-center">
    <div class="quiz-edit-question-add-container">
        <button class="btn btn-success my-3 btn-primary-action" @onclick="@(e=> OnAddQuestion.InvokeAsync())">
            + NEW QUESTION
        </button>
    </div>
    <div class="quiz-edit-question-count fs-5">@(Questions.Count) question@(GetQuestionCountSuffix())</div>
    <div class="d-flex flex-column quiz-edit-question-list flex-grow-1 flex-fill">

        @foreach(var question in Questions.Select((v,index)=> new { Value = v, Index = index }))
        {
            <QuestionListItem Question="question.Value"
                          QuestionIndex=question.Index+1
                          OnEditQuestion="OnEditQuestion"
                          OnDeleteQuestion="OnDeleteQuestion" />
        }
    </div>
</div>


@code {

    [Parameter]
    public List<Question> Questions { get; set; }

    [Parameter]
    public EventCallback<Question> OnEditQuestion { get; set; }

    [Parameter]
    public EventCallback<Question> OnDeleteQuestion { get; set; }

    [Parameter]
    public EventCallback OnAddQuestion { get; set; }

    private string GetQuestionCountSuffix()
    {
        return Questions.Count == 1 ? "" : "s";
    }
}
